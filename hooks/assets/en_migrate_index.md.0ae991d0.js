import{_ as s,o as n,c as a,b as p}from"./app.032845d0.js";const d=JSON.parse('{"title":"\u{1FAF6} Migrate to v2 version","description":"","frontmatter":{"realPath":"docs/migrate/index.en-US.md"},"headers":[{"level":2,"title":"1\u3001useRequest plugin option","slug":"_1\u3001userequest-plugin-option"},{"level":2,"title":"v1 use","slug":"v1-use"},{"level":2,"title":"v2 use","slug":"v2-use"}],"relativePath":"en/migrate/index.md"}'),l={name:"en/migrate/index.md"},e=p(`<h1 id="\u{1FAF6}-migrate-to-v2-version" tabindex="-1">\u{1FAF6} Migrate to v2 version <a class="header-anchor" href="#\u{1FAF6}-migrate-to-v2-version" aria-hidden="true">#</a></h1><div class="info custom-block"><p class="custom-block-title">INFO</p><ul><li>useRequest plugin option</li></ul></div><h2 id="_1\u3001userequest-plugin-option" tabindex="-1">1\u3001useRequest plugin option <a class="header-anchor" href="#_1\u3001userequest-plugin-option" aria-hidden="true">#</a></h2><p>In order to have good type hints and subsequent expansion in the v2 version of useRequest plug-in system, we have redesigned the usage of plugin option. You only need to make simple changes to achieve migration.</p><h2 id="v1-use" tabindex="-1">v1 use <a class="header-anchor" href="#v1-use" aria-hidden="true">#</a></h2><div class="language-typescript"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">useRequest</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">serviceFn</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">option</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">pluginOption</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E06C75;">useFormatterPlugin</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">otherPlugins</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">data</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">useRequest</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">  () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">serviceFn</span><span style="color:#24292F;">(),</span></span>
<span class="line"><span style="color:#24292F;">  {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">option,</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">pluginOption,</span></span>
<span class="line"><span style="color:#24292F;">  },</span></span>
<span class="line"><span style="color:#24292F;">  [useFormatterPlugin, </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">otherPlugins],</span></span>
<span class="line"><span style="color:#24292F;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="v2-use" tabindex="-1">v2 use <a class="header-anchor" href="#v2-use" aria-hidden="true">#</a></h2><div class="language-typescript"><span class="copy"></span><pre class="vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">useRequest</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">serviceFn</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span><span style="color:#E06C75;">option</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">pluginOptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">      ...</span><span style="color:#E06C75;">pluginOption</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E06C75;">useFormatterPlugin</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">otherPlugins</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre><pre class="vp-code-light"><code><span class="line"><span style="color:#CF222E;">const</span><span style="color:#24292F;"> { </span><span style="color:#0550AE;">data</span><span style="color:#24292F;"> } </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">useRequest</span><span style="color:#24292F;">(</span></span>
<span class="line"><span style="color:#24292F;">  () </span><span style="color:#CF222E;">=&gt;</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">serviceFn</span><span style="color:#24292F;">(),</span></span>
<span class="line"><span style="color:#24292F;">  {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">option,</span></span>
<span class="line"><span style="color:#24292F;">    pluginOptions: {</span></span>
<span class="line"><span style="color:#24292F;">      </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">pluginOption,</span></span>
<span class="line"><span style="color:#24292F;">    },</span></span>
<span class="line"><span style="color:#24292F;">  },</span></span>
<span class="line"><span style="color:#24292F;">  [useFormatterPlugin, </span><span style="color:#CF222E;">...</span><span style="color:#24292F;">otherPlugins],</span></span>
<span class="line"><span style="color:#24292F;">)</span></span>
<span class="line"></span></code></pre></div><p>Just migrate it to <code>pluginOptions</code> based on the original plugin option.</p>`,9),o=[e];function t(c,r,i,y,B,F){return n(),a("div",null,o)}var g=s(l,[["render",t]]);export{d as __pageData,g as default};
